// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level.proto

#ifndef PROTOBUF_level_2eproto__INCLUDED
#define PROTOBUF_level_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pang {
namespace level {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_level_2eproto();
void protobuf_AssignDesc_level_2eproto();
void protobuf_ShutdownFile_level_2eproto();

class Level;

// ===================================================================

class Level : public ::google::protobuf::Message {
 public:
  Level();
  virtual ~Level();

  Level(const Level& from);

  inline Level& operator=(const Level& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Level& default_instance();

  void Swap(Level* other);

  // implements Message ----------------------------------------------

  Level* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Level& from);
  void MergeFrom(const Level& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seed = 1 [default = 1337];
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 1;
  inline ::google::protobuf::int32 seed() const;
  inline void set_seed(::google::protobuf::int32 value);

  // optional int32 width = 2 [default = 100];
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 3 [default = 100];
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 num_rooms = 4 [default = 10];
  inline bool has_num_rooms() const;
  inline void clear_num_rooms();
  static const int kNumRoomsFieldNumber = 4;
  inline ::google::protobuf::int32 num_rooms() const;
  inline void set_num_rooms(::google::protobuf::int32 value);

  // optional int32 min_room_width = 5 [default = 10];
  inline bool has_min_room_width() const;
  inline void clear_min_room_width();
  static const int kMinRoomWidthFieldNumber = 5;
  inline ::google::protobuf::int32 min_room_width() const;
  inline void set_min_room_width(::google::protobuf::int32 value);

  // optional int32 max_room_width = 6 [default = 20];
  inline bool has_max_room_width() const;
  inline void clear_max_room_width();
  static const int kMaxRoomWidthFieldNumber = 6;
  inline ::google::protobuf::int32 max_room_width() const;
  inline void set_max_room_width(::google::protobuf::int32 value);

  // optional int32 min_room_height = 7 [default = 10];
  inline bool has_min_room_height() const;
  inline void clear_min_room_height();
  static const int kMinRoomHeightFieldNumber = 7;
  inline ::google::protobuf::int32 min_room_height() const;
  inline void set_min_room_height(::google::protobuf::int32 value);

  // optional int32 max_room_height = 8 [default = 20];
  inline bool has_max_room_height() const;
  inline void clear_max_room_height();
  static const int kMaxRoomHeightFieldNumber = 8;
  inline ::google::protobuf::int32 max_room_height() const;
  inline void set_max_room_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pang.level.Level)
 private:
  inline void set_has_seed();
  inline void clear_has_seed();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_num_rooms();
  inline void clear_has_num_rooms();
  inline void set_has_min_room_width();
  inline void clear_has_min_room_width();
  inline void set_has_max_room_width();
  inline void clear_has_max_room_width();
  inline void set_has_min_room_height();
  inline void clear_has_min_room_height();
  inline void set_has_max_room_height();
  inline void clear_has_max_room_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seed_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 num_rooms_;
  ::google::protobuf::int32 min_room_width_;
  ::google::protobuf::int32 max_room_width_;
  ::google::protobuf::int32 min_room_height_;
  ::google::protobuf::int32 max_room_height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_level_2eproto();
  friend void protobuf_AssignDesc_level_2eproto();
  friend void protobuf_ShutdownFile_level_2eproto();

  void InitAsDefaultInstance();
  static Level* default_instance_;
};
// ===================================================================


// ===================================================================

// Level

// optional int32 seed = 1 [default = 1337];
inline bool Level::has_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Level::set_has_seed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Level::clear_has_seed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Level::clear_seed() {
  seed_ = 1337;
  clear_has_seed();
}
inline ::google::protobuf::int32 Level::seed() const {
  return seed_;
}
inline void Level::set_seed(::google::protobuf::int32 value) {
  set_has_seed();
  seed_ = value;
}

// optional int32 width = 2 [default = 100];
inline bool Level::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Level::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Level::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Level::clear_width() {
  width_ = 100;
  clear_has_width();
}
inline ::google::protobuf::int32 Level::width() const {
  return width_;
}
inline void Level::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// optional int32 height = 3 [default = 100];
inline bool Level::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Level::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Level::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Level::clear_height() {
  height_ = 100;
  clear_has_height();
}
inline ::google::protobuf::int32 Level::height() const {
  return height_;
}
inline void Level::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional int32 num_rooms = 4 [default = 10];
inline bool Level::has_num_rooms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Level::set_has_num_rooms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Level::clear_has_num_rooms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Level::clear_num_rooms() {
  num_rooms_ = 10;
  clear_has_num_rooms();
}
inline ::google::protobuf::int32 Level::num_rooms() const {
  return num_rooms_;
}
inline void Level::set_num_rooms(::google::protobuf::int32 value) {
  set_has_num_rooms();
  num_rooms_ = value;
}

// optional int32 min_room_width = 5 [default = 10];
inline bool Level::has_min_room_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Level::set_has_min_room_width() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Level::clear_has_min_room_width() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Level::clear_min_room_width() {
  min_room_width_ = 10;
  clear_has_min_room_width();
}
inline ::google::protobuf::int32 Level::min_room_width() const {
  return min_room_width_;
}
inline void Level::set_min_room_width(::google::protobuf::int32 value) {
  set_has_min_room_width();
  min_room_width_ = value;
}

// optional int32 max_room_width = 6 [default = 20];
inline bool Level::has_max_room_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Level::set_has_max_room_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Level::clear_has_max_room_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Level::clear_max_room_width() {
  max_room_width_ = 20;
  clear_has_max_room_width();
}
inline ::google::protobuf::int32 Level::max_room_width() const {
  return max_room_width_;
}
inline void Level::set_max_room_width(::google::protobuf::int32 value) {
  set_has_max_room_width();
  max_room_width_ = value;
}

// optional int32 min_room_height = 7 [default = 10];
inline bool Level::has_min_room_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Level::set_has_min_room_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Level::clear_has_min_room_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Level::clear_min_room_height() {
  min_room_height_ = 10;
  clear_has_min_room_height();
}
inline ::google::protobuf::int32 Level::min_room_height() const {
  return min_room_height_;
}
inline void Level::set_min_room_height(::google::protobuf::int32 value) {
  set_has_min_room_height();
  min_room_height_ = value;
}

// optional int32 max_room_height = 8 [default = 20];
inline bool Level::has_max_room_height() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Level::set_has_max_room_height() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Level::clear_has_max_room_height() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Level::clear_max_room_height() {
  max_room_height_ = 20;
  clear_has_max_room_height();
}
inline ::google::protobuf::int32 Level::max_room_height() const {
  return max_room_height_;
}
inline void Level::set_max_room_height(::google::protobuf::int32 value) {
  set_has_max_room_height();
  max_room_height_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace level
}  // namespace pang

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_level_2eproto__INCLUDED
